#!/usr/bin/bash 

#!/usr/bin/bash -x

url="https://github.com/didi64/NIA22Prog.git"
USER=$(whoami)
GIT="/home/$USER/work/NIA22Prog"
work="/home/$USER/work"
notebooks="$work/notebooks"
contents="${GIT}/contents.txt"

is_number='^[0-9]+$'

help="\nUsage: Update [<file>| <number>]\n\nWithout arguments all files are updated, but not copied.\nOtherwise, the file or all files from lessen <number> are updated and copied to notebooks\nIn case of errors: try Update -f [<file>| <number>]\n"

# function
process_file () {
  if [[ "$1" != *"."* ]]; then
    #echo "folder: $1"
    find "$GIT" -type d -name $1 -exec cp -ri {} "$notebooks" \;
  else 
    #echo "file: $file"
    find "$GIT" -type f -name $1 -exec cp -i {} "$notebooks" \;
    find "$notebooks" -type f -name "*.ipynb". -exec chmod 644 {} \;
  fi
}

# parse args 
if [[ "$1" != "-f" ]]; then
  args=("$@")  
else
  options="-f"
  args=("$@")
  unset 'args[0]'
fi

# use without arguments, just update everything
if [[ "$options" == "-f" ]]; then
  git -C $GIT  reset --hard HEAD.
fi

# update everything
git -C $GIT pull
find "$GIT" -type f -name "*.ipynb" -exec chmod 444 {} \;

# process args
for item in "${args[@]}"; do
  echo "processing arg $item"
  if [[ $item =~ $is_number ]] ; then
    # get files 
    files=$(sed -n -e "s/^${item}:\(.*\)/\1/p" "$contents")
    echo  "${files[@]}"
    for file in ${files[@]}; do
      process_file $file
    done
    echo "done"
  else
    process_file $item
#    find "$GIT" -type f -name ${item} -exec cp -i {} "$notebooks" \;
#    chmod 644 "$notebooks/$item"
  fi  
done

echo -e "$help"
